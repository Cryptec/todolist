{"version":3,"sources":["todolist/TaskProvider.js","todolist/NewTaskForm.js","todolist/Task.js","todolist/TaskList.js","ToDoList.js","utils/index.js","screens/home.js","components/PrivateRoute.js","components/PublicRoute.js","components/Login/Forgot/forgotPassword.js","components/Login/Forgot/Forgotbox.js","screens/Forgotwindow.js","components/Login/loginform.js","components/Login/registerform.js","components/Login/loginbox.js","screens/Loginwindow.js","components/auth/Verify.js","App.js","reportWebVitals.js","index.js"],"names":["TaskContext","createContext","useTasks","useContext","TaskProvider","children","useState","tasks","setTasks","Provider","value","addTask","task","id","v4","complete","setStatusTask","status","map","t","NewTaskForm","setTask","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Task","checked","className","TaskList","i","TodoList","TOKEN_KEY","isLogin","localStorage","getItem","login","setItem","Home","props","handleLogout","removeItem","history","push","setState","state","this","onClick","to","Component","PrivateRoute","component","rest","render","PublicRoute","restricted","ForgotPassword","email","password","confirm_password","buttonText","handleSubmit","bind","method","style","fontWeight","LoginWindow","fontSize","textDecoration","right","top","color","position","handleChange","label","event","field","alert","axios","url","headers","data","then","response","answer","ForgotBox","ForgotWindow","Loginform","handleLogin","name","answerOk","answerDenied","console","log","withRouter","Registerbox","handleConfirmPassword","regpassword","regconfirm_password","regname","regemail","regstatus","Loginbox","Verify","search","window","location","params","URLSearchParams","foo","get","foo2","registration","token","setTimeout","replace","App","path","exact","Verfify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c83d7c7b.chunk.js","sourcesContent":["// 1\nimport React, {createContext, useState, useContext} from 'react'\nimport { v4 } from \"uuid\"\n\n// 2\nconst TaskContext = createContext()\nexport const useTasks = () => useContext(TaskContext)\n\nexport default function TaskProvider({ children }) {\n  // 3\n  const [tasks, setTasks] = useState([])\n\n  // 4\n  const addTask = task =>\n      setTasks([\n          ...tasks,\n          {\n              id: v4(),\n              task,\n              complete: false\n          }\n      ])\n\n\n  // 5\n  const setStatusTask = (id, status) => {\n      setTasks(tasks.map(t => t.id === id ? {...t, complete: status} : t))\n  }\n\n\n  // 6\n  return (\n      <TaskContext.Provider value={{ tasks, addTask, setStatusTask }}>\n          { children }\n      </TaskContext.Provider>\n  )\n}","// 1\nimport React, { useState } from 'react'\nimport { useTasks } from './TaskProvider'\n\nexport default function NewTaskForm() {\n  // 2\n  const [task, setTask] = useState('')\n  const { addTask } = useTasks()\n\n  // 3\n  const submit = e => {\n    e.preventDefault()\n    addTask(task)\n    setTask('')\n  }\n\n  return (\n    // 4\n    <form onSubmit={submit}>\n      <input type=\"text\" value={task} placeholder=\"New task...\" onChange={e => setTask(e.target.value)} required />\n      <button>Add</button>\n    </form>\n  )\n}","// 1\nimport React from 'react';\nimport { useTasks } from './TaskProvider';\nimport * as FaIcons from 'react-icons/fa';\nimport './Todo.scss'\n\nexport default function Task({ id, task, complete }) {\n  // 2\n  const { setStatusTask } = useTasks()\n\n  // 3\n  const checkTask = e => setStatusTask(id, e.target.checked)\n\n  return (\n    <tr>\n      <td>\n        <input type=\"checkbox\"  onChange={checkTask} />\n      </td>\n      <td>\n        <span className={ complete ? 'task-done' : '' }>{ task }</span>\n      </td>\n      <td>\n         <button type=\"button\" className=\"delButton\" ><FaIcons.FaTrash /></button>\n      </td>\n    </tr>\n  )\n}","// 1\nimport React from 'react'\nimport Task from './Task'\nimport { useTasks } from './TaskProvider'\n\nexport default function TaskList() {\n  // 2\n  const { tasks } = useTasks()\n  return (\n    <table>\n      <tbody>\n        {\n          // 3\n          tasks.map((task, i) => \n            <Task key={i} {...task} />\n          )\n        }\n      </tbody>\n    </table>\n  )\n}","// 1\nimport React from 'react'\nimport './App.css'\nimport './todolist/Todo.scss'\nimport NewTaskForm from './todolist/NewTaskForm'\nimport TaskList from './todolist/TaskList'\n\nfunction TodoList() {\n  // 2\n  return (\n    <div className=\"container\">\n      <br></br>\n       <h1 className=\"title\">Todo List</h1>\n      <br></br>\n      <NewTaskForm />\n      <TaskList />\n    </div>\n  )\n}\n\nexport default TodoList","  \nconst TOKEN_KEY = 'jwt';\n\nexport const login = () => {\n    localStorage.setItem(TOKEN_KEY, 'TestLogin');\n}\n\nexport const logout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n}\n\nexport const isLogin = () => {\n    if (localStorage.getItem(TOKEN_KEY)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport default login","import '../css/homescreen.css';\nimport React, { Component } from 'react';\nimport { logout, isLogin } from '../utils';\nimport { Link } from 'react-router-dom';\nimport TodoList from '../ToDoList'\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLogin: isLogin()\n        }\n    }\n\n    handleLogout = () => {\n        logout();\n        this.props.history.push('/login')\n        this.setState({\n            isLogin: false\n        })\n    }\n\n    render() {\n        return (\n         <div>\n                <header className=\"headerBar\">\n\n                    {this.state.isLogin ? \n                    <button  className=\"logoutButton\" onClick={() => this.handleLogout()}>Logout</button>\n                    : <Link to=\"/login\" onClick={() => this.handleLogout()}></Link>\n                }\n                </header>\n                <TodoList />\n        </div>\n   \n  \n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /login page\n        <Route {...rest} render={props => (\n            isLogin() ?\n                <Component {...props} />\n            : <Redirect to=\"/login\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    return (\n        // restricted = false meaning public route\n        // restricted = true meaning restricted route\n        <Route {...rest} render={props => (\n            isLogin() && restricted ?\n                <Redirect to=\"/\" />\n            : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\n\nimport LoginWindow from '../../../screens/Loginwindow';\n\nimport '../../../css/forgotbox.css';\n\n\nclass ForgotPassword extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email:\"\",\n            password: \"\",\n            confirm_password:\"\",\n            status: \"Request email\"\n        };\n    }\n\n    render() {\n\n        let buttonText = this.state.status;\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                    <div className=\"orderContent\">\n                        <span style={{ fontWeight: \"600\" }}>Forgot your password?</span>\n\n                        <Link to=\"/login\" onClick={() => LoginWindow()} style={{fontSize:\"1.5rem\", textDecoration:\"none\", right: \"30px\", top: \"20px\", color:\"white\", position:\"absolute\"}}> &#x2716; </Link>\n\n                        <br></br>\n                        \n                        <div>\n                        \n                            <input\n                                type='text'\n                                className='form-group-register'\n                                id=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleChange.bind(this)}\n                                required\n                                placeholder=' Enter your email*'\n                            />\n                        <br></br>\n                        <input\n                                label=\"Enter your new password:\"\n                                type='password'\n                                className='form-group-register'\n                                id=\"new_pass\"\n                                value={this.state.password}\n                                onChange={this.handleChange.bind(this)}\n                                required\n                                placeholder=' set new password*'\n                            />\n                  \n                            <input\n                                label=\"Confirm your new password:\"\n                                type='password'\n                                className='form-group-register'\n                                id=\"new_pass_re\"\n                                value={this.state.confirm_password}\n                                onChange={this.handleChange.bind(this)}\n                                required\n                                placeholder=' retype new password*'\n                            />\n                        </div> \n                        </div>\n                        <button className=\"orderButton\">{buttonText}</button>\n\n                </form>\n            </div>\n\n        )\n    }\n\n    handleChange(event) {\n        const field = event.target.id;\n        if (field === \"email\") {\n            this.setState({ email: event.target.value });\n        } else if (field === \"new_pass\") {\n            this.setState({ password: event.target.value });\n        } else if (field === \"new_pass_re\") {\n            this.setState({ confirm_password: event.target.value });\n        }\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.password !== this.state.confirm_password) {\n            alert(\"The passwords doesn't match\")\n            return false; // The form won't submit\n        }\n        else  \n        \n        this.setState({ status: \"Requesting...\" });\n\n        axios({\n            method: \"POST\",\n            url: \"https://rust.mneubauer.com/forgot_password\",\n            headers: { 'Content-Type': 'application/json' },\n            data: { email: this.state.email, password: this.state.password }\n\n        }).then((response) => {\n            if (response.data.answer === \"Success\") {\n                this.setState({ email: \"\", password: \"\", confirm_password: \"\", status: \"Submit\" });\n                alert(\"Request sent\");\n            } else if (response.data.status === \"failed\") {\n                alert(\"Request Failed\");\n            }\n        });\n    }\n}\n\nexport default ForgotPassword","import React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { Link } from 'react-router-dom';\n\nimport ForgotPassword from './forgotPassword'\n\nimport '../../../css/forgotbox.css'\nimport '../../../css/colors.css';\n\n\nclass ForgotBox extends Component {\n\n\n    render () {\n\n       \n        return(\n          <div className=\"forgotbox\">\n                \n                    <Tabs>\n\n                        <TabList>\n                        <div>\n                            <Tab className=\"orderButton\" type=\"submit\"> Order key </Tab>\n                            <Link to='/' className=\"setNewButton\">Back</Link>\n                        </div>\n                        </TabList>\n                        \n                        <TabPanel>\n                            <ForgotPassword/>\n                        </TabPanel>\n                      \n                    </Tabs>\n          </div>\n          \n        )\n    }\n    \n}\n\nexport default ForgotBox","import '../App.css';\nimport ForgotBox from '../components/Login/Forgot/Forgotbox'\n\nfunction ForgotWindow() {\n  return (\n      <header className=\"App-header\">\n\n        <ForgotBox />\n\n      </header>\n\n  );\n}\n\nexport default ForgotWindow;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { withRouter, Link } from 'react-router-dom';\n\nimport ForgotWindow from '../../screens/Forgotwindow';\nimport '../../css/loginbox.css';\nimport login from '../../utils';\n\n\nclass Loginform extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            password: \"\",\n            status: \"Submit\",\n            answerOk: \"Success\",\n            answerDenied: \"Denied\"\n        };\n    }\n\n    render() {\n\n        let buttonText = this.state.status;\n        return (\n            <div>\n               \n                <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                    <div className=\"loginContent\">\n                    <div className=\"loginTextBox\">\n                         <span>\n                             <br></br>\n                             Hello!\n                             <br></br>\n                             Nice, to have you back!\n                         </span>\n                    </div>\n                        <span style={{ fontWeight: \"600\"}}>Login</span>\n\n                        <div className=\"textbox\">\n\n                    \n                            <input\n                                type='text'\n                                className='form-group'\n                                id=\"name\"\n                                value={this.state.name}\n                                onChange={this.handleChange.bind(this)}\n                                required\n                                placeholder=' Username'\n                            />\n                      <br className=\"space\"></br>\n                            <input\n                                type='password'\n                                className='form-group'\n                                id=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange.bind(this)}\n                                required\n                                placeholder=' Password'\n                            />\n                \n                        </div>\n                        <Link to=\"/forgot\" onClick={() => ForgotWindow()} style={{fontSize: \"0.8rem\", textDecoration: \"none\", color: \"white\"}}> forgot password? </Link>\n\n                    </div>\n   \n                    <button className=\"loginButton\">{buttonText}</button>\n\n                </form>\n              \n            </div>\n\n        )\n    }\n\n    handleChange(event) {\n        const field = event.target.id;\n        if (field === \"name\") {\n            this.setState({ name: event.target.value });\n        } else if (field === \"password\") {\n            this.setState({ password: event.target.value });\n        }\n    }\n\n    handleLogin = () => {\n        login();\n        this.props.history.push('/')\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setState({ status: \"Submit\" });\n\n        axios({\n            method: \"POST\",\n            url: \"https://rust.mneubauer.com/login\",\n            headers: { 'Content-Type': 'application/json' },\n            data: { name: this.state.name, password: this.state.password }\n            \n        }).then((response, props) => {\n            \n            console.log(response);\n            if (response.data.answer === this.state.answerOk) {\n                \n                this.setState({ name: \"\", password: \"\", status: \"Logged in\" })\n                this.handleLogin()\n                alert(\"Login Success\");\n\n                \n           \n            } else if (response.data.answer === this.state.answerDenied) {\n                this.setState({ password: \"\", status: \"Logging in\" });\n                alert(\"Wrong Username or Password\");\n            }\n        });\n    \n    }\n}\n//export default Loginform\nexport default withRouter(Loginform);","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\n\n\nimport '../../css/loginbox.css';\n\n\nclass Registerbox extends Component {\n    constructor() {\n        super();\n        this.state = {\n            regname: \"\",\n            regpassword: \"\",\n            regemail:\"\",\n            regconfirm_password:\"\",\n            regstatus: \"Submit\"\n        };\n    }\n\n    render() {\n\n        let buttonText = this.state.regstatus;\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                    <div className=\"registerContent\">\n                        <span style={{ fontWeight: \"600\" }}>Register</span>\n        \n                            <div className=\"textbox\">\n                        \n                            <input\n                                type='text'\n                                className='form-group-register'\n                                id=\"regname\"\n                                value={this.state.name}\n                                onChange={this.handleChange.bind(this)}\n                                required\n                                placeholder=' Username*'\n                            />\n                       \n             \n                            <input\n                                type='text'\n                                className='form-group-register'\n                                id=\"regemail\"\n                                value={this.state.email}\n                                onChange={this.handleChange.bind(this)}\n                                required\n                                placeholder=' Enter your email*'\n                            />\n                   \n                            <input\n                                type='password'\n                                className='form-group-register'\n                                id=\"regpassword\"\n                                value={this.state.password}\n                                onChange={this.handleChange.bind(this)}\n                                required\n                                placeholder=' Password*'\n                            />\n               \n                            <input\n                                type='password'\n                                className='form-group-register'\n                                id=\"regconfirm_password\"\n                                value={this.state.confirm_password}\n                                onChange={this.handleChange.bind(this)}\n                                required\n                                placeholder=' Confirm password*'\n                            />\n                       </div>\n                    \n                       </div>\n                        \n                    \n  \n                    <button className=\"registerButton\">{buttonText}</button>\n\n                </form>\n\n            </div>\n\n        )\n    }\n\n\n    handleChange(event) {\n        const field = event.target.id;\n        if (field === \"regname\") {\n            this.setState({ regname: event.target.value });\n        } else if (field === \"regemail\") {\n            this.setState({ regemail: event.target.value });\n        } else if (field === \"regpassword\") {\n            this.setState({ regpassword: event.target.value });\n        } else if (field === \"regconfirm_password\") {\n            this.setState({ regconfirm_password: event.target.value });\n        }\n    }\n    handleConfirmPassword = (event) => {\n        if (event.target.value !== this.state.regpassword) {\n            alert('error');\n            this.setState({ regconfirm_password: event.target.value })\n        }\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.regpassword !== this.state.regconfirm_password) {\n            alert(\"The passwords doesn't match\")\n            return false; // The form won't submit\n        }\n        else  \n    \n        this.setState({ status: \"Submitting\" });\n        \n        axios({\n            method: \"POST\",\n            url: \"https://rust.mneubauer.com/register\",\n            headers: { 'Content-Type': 'application/json' },\n            data: { regname: this.state.regname, regpassword: this.state.regpassword, regemail: this.state.regemail }\n\n        }).then((response) => {\n            if (response.data.answer === \"Success\") {\n                this.setState({ regname: \"\", regpassword: \"\", regconfirm_password: \"\", regemail: \"\", regstatus: \"Submitted\" });\n                alert(\"Form sent\");\n\n            } else if (response.data.answer === \"Denied\") {\n                alert(\"Wrong Username or Password\");\n                \n            } else if (response.data.answer === \"Name_Excist\") {\n                alert(\"Username already exist\");\n\n            } else if (response.data.answer === \"Email_Excist\") {\n                alert(\"There is already an account with this email\");\n        }\n            \n        });\n    }\n}\n\nexport default Registerbox","import React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nimport LoginForm from './loginform'\nimport RegisterForm from './registerform'\n\nimport '../../css/loginbox.css';\nimport '../../css/colors.css';\n\n\nclass Loginbox extends Component {\n\n\n    render () {\n\n       \n        return(\n          <div className=\"loginbox\">\n                \n                    <Tabs>\n                        <TabList>\n                        <div>\n                            <Tab className=\"loginButton\" type=\"submit\"> Login </Tab>\n                            <Tab className=\"registerButton\">Register</Tab>\n                        </div>\n                        </TabList>\n                        \n                        <TabPanel>\n                            <LoginForm/>\n                        </TabPanel>\n                        <TabPanel>\n                            <RegisterForm/>\n                        </TabPanel>\n\n                    \n                      \n           </Tabs>\n                \n              \n\n          </div>\n          \n        )\n    }\n\n    \n}\n\nexport default Loginbox","import '../App.css';\nimport LoginBox from '../components/Login/loginbox'\n\nfunction LoginWindow() {\n  return (\n      <header className=\"App-header\">\n\n        <LoginBox />\n\n      </header>\n\n  );\n}\n\nexport default LoginWindow;\n","import React, { Component } from 'react';\nimport axios from \"axios\";\n\n\nimport '../../css/loginbox.css';\n\n\nclass Verify extends Component {\n\n\nrender() {\n        \n\nlet search = window.location.search;\nlet params = new URLSearchParams(search);\nlet foo = params.get('token');\nlet foo2 = params.get('token-forget');\nif (foo!=null || foo2!=null){\n\nif (foo!=null){\n//funktion auslösen\nthis.handleSubmit(foo,true);\n}\n\nif (foo2!=null){\n//funktion auslösen\nthis.handleSubmit(foo2,false);\n}\n\n        \n        return (\n            <div>\n\n                <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                    <div className=\"redirectContent\">\n                      \n                             Success! \n                         \n                             ...Redirect...\n                       \n\n                        <div className=\"textbox\">\n\n\n                    \n\n                        </div>\n\n                    </div>\n\n\n                </form>\n\n            </div>\n\n        )\n    }\n\nelse{\n    //Darstellung wenn kein key als parameter mit gegeben wird\n    return (\n        <div>\n\n            <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n            \n                    <div className=\"redirectContent\">\n                  \n                   \n                         Hello!\n                   \n                         no access to this page!\n                   \n               \n                    </div>\n\n            </form>\n\n        </div>\n\n    )\n}\n}\n\n\nhandleSubmit(foo,registration){\n    \n    alert(\"Eingabe: \" + foo + \" wird weiter geleitet!\");\n    axios({\n        method: \"POST\",\n        url: \"http://213.196.200.119:8080/verify\",\n        headers: { 'Content-Type': 'application/json' },\n        data: { token: foo, registration: registration }\n\n    }).then((response) => {\n        if (response.data.answer === \"Success\") {\n           \n            }\n        })\n\n    setTimeout(function(){ window.location.replace(\"/login\"); }, 3000);\n    }\n}\n\nexport default Verify","import './todolist/Todo.scss'\nimport './App.css';\nimport TodoList from './ToDoList'\nimport React, { Component } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch\n} from \"react-router-dom\";\nimport Home from './screens/home'\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport LoginWindow from './screens/Loginwindow';\nimport ForgotWindow from './screens/Forgotwindow.js'\nimport Verfify from './components/auth/Verify';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <PrivateRoute restricted={false} component={Home} path=\"/\" exact />\n          <PublicRoute restricted={true} component={Verfify} path=\"/verify\" exact />\n          <PublicRoute restricted={true} component={LoginWindow} path=\"/login\" exact />\n          <PublicRoute restricted={true} component={ForgotWindow} path=\"/forgot\" exact />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport TaskProvider from './todolist/TaskProvider'\n\nReactDOM.render(\n  <TaskProvider>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </TaskProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}