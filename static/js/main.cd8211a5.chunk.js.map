{"version":3,"sources":["TaskProvider.js","NewTaskForm.js","Task.js","TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskContext","createContext","useTasks","useContext","TaskProvider","children","useState","tasks","setTasks","Provider","value","addTask","task","id","v4","complete","setStatusTask","status","map","t","NewTaskForm","setTask","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Task","checked","className","TaskList","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAKMA,EAAcC,0BACPC,EAAW,kBAAMC,qBAAWH,IAE1B,SAASI,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EAEvBC,mBAAS,IAFc,mBAE1CC,EAF0C,KAEnCC,EAFmC,KAqBjD,OACI,cAACR,EAAYS,SAAb,CAAsBC,MAAO,CAAEH,QAAOI,QAjB1B,SAAAC,GAAI,OAChBJ,EAAS,GAAD,mBACDD,GADC,CAEJ,CACIM,GAAIC,cACJF,OACAG,UAAU,OAW6BC,cAN7B,SAACH,EAAII,GACvBT,EAASD,EAAMW,KAAI,SAAAC,GAAC,OAAIA,EAAEN,KAAOA,EAAT,2BAAkBM,GAAlB,IAAqBJ,SAAUE,IAAUE,QAKjE,SACMd,IC3BG,SAASe,IAAc,MAEZd,mBAAS,IAFG,mBAE7BM,EAF6B,KAEvBS,EAFuB,KAG5BV,EAAYT,IAAZS,QASR,OAEE,cADA,CACA,QAAMW,SARO,SAAAC,GACbA,EAAEC,iBACFb,EAAQC,GACRS,EAAQ,KAKR,UACE,uBAAOI,KAAK,OAAOf,MAAOE,EAAMc,YAAY,mBAAmBC,SAAU,SAAAJ,GAAC,OAAIF,EAAQE,EAAEK,OAAOlB,QAAQmB,UAAQ,IAC/G,4CChBS,SAASC,EAAT,GAAuC,IAAvBjB,EAAsB,EAAtBA,GAAID,EAAkB,EAAlBA,KAAMG,EAAY,EAAZA,SAE/BC,EAAkBd,IAAlBc,cAKR,OACE,+BACE,6BACE,uBAAOS,KAAK,WAAYE,SALZ,SAAAJ,GAAC,OAAIP,EAAcH,EAAIU,EAAEK,OAAOG,cAO9C,6BACE,sBAAMC,UAAYjB,EAAW,YAAc,GAA3C,SAAkDH,SCZ3C,SAASqB,IAAW,IAEzB1B,EAAUL,IAAVK,MACR,OACE,gCACE,gCAGIA,EAAMW,KAAI,SAACN,EAAMsB,GAAP,OACR,cAACJ,EAAD,eAAkBlB,GAAPsB,UCIRC,MAXf,WAEE,OACE,sBAAKH,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,cAACZ,EAAD,IACA,cAACa,EAAD,QCDSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC1C,EAAD,UACA,cAAC,IAAM2C,WAAP,UACE,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cd8211a5.chunk.js","sourcesContent":["// 1\r\nimport React, {createContext, useState, useContext} from 'react'\r\nimport { v4 } from \"uuid\"\r\n\r\n// 2\r\nconst TaskContext = createContext()\r\nexport const useTasks = () => useContext(TaskContext)\r\n\r\nexport default function TaskProvider({ children }) {\r\n  // 3\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  // 4\r\n  const addTask = task =>\r\n      setTasks([\r\n          ...tasks,\r\n          {\r\n              id: v4(),\r\n              task,\r\n              complete: false\r\n          }\r\n      ])\r\n\r\n  // 5\r\n  const setStatusTask = (id, status) => {\r\n      setTasks(tasks.map(t => t.id === id ? {...t, complete: status} : t))\r\n  }\r\n\r\n  // 6\r\n  return (\r\n      <TaskContext.Provider value={{ tasks, addTask, setStatusTask }}>\r\n          { children }\r\n      </TaskContext.Provider>\r\n  )\r\n}","// 1\r\nimport React, { useState } from 'react'\r\nimport { useTasks } from './TaskProvider'\r\n\r\nexport default function NewTaskForm() {\r\n  // 2\r\n  const [task, setTask] = useState('')\r\n  const { addTask } = useTasks()\r\n\r\n  // 3\r\n  const submit = e => {\r\n    e.preventDefault()\r\n    addTask(task)\r\n    setTask('')\r\n  }\r\n\r\n  return (\r\n    // 4\r\n    <form onSubmit={submit}>\r\n      <input type=\"text\" value={task} placeholder=\"Get some eggs...\" onChange={e => setTask(e.target.value)} required />\r\n      <button>Add</button>\r\n    </form>\r\n  )\r\n}","// 1\r\nimport React from 'react'\r\nimport { useTasks } from './TaskProvider'\r\n\r\nexport default function Task({ id, task, complete }) {\r\n  // 2\r\n  const { setStatusTask } = useTasks()\r\n\r\n  // 3\r\n  const checkTask = e => setStatusTask(id, e.target.checked)\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input type=\"checkbox\"  onChange={checkTask} />\r\n      </td>\r\n      <td>\r\n        <span className={ complete ? 'task-done' : '' }>{ task }</span>\r\n      </td>\r\n    </tr>\r\n  )\r\n}","// 1\r\nimport React from 'react'\r\nimport Task from './Task'\r\nimport { useTasks } from './TaskProvider'\r\n\r\nexport default function TaskList() {\r\n  // 2\r\n  const { tasks } = useTasks()\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {\r\n          // 3\r\n          tasks.map((task, i) => \r\n            <Task key={i} {...task} />\r\n          )\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}","// 1\nimport React from 'react'\nimport './App.css'\nimport './Todo.scss'\nimport NewTaskForm from './NewTaskForm'\nimport TaskList from './TaskList'\n\nfunction App() {\n  // 2\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Todo List</h1>\n      <NewTaskForm />\n      <TaskList />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport TaskProvider from './TaskProvider'\n\nReactDOM.render(\n  <TaskProvider>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </TaskProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}