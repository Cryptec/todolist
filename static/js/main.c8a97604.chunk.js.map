{"version":3,"sources":["todolist/TaskProvider.js","todolist/NewTaskForm.js","todolist/Task.js","todolist/TaskList.js","ToDoList.js","utils/index.js","screens/home.js","components/PrivateRoute.js","components/PublicRoute.js","components/Login/loginform.js","components/Login/loginbox.js","screens/Loginwindow.js","App.js","reportWebVitals.js","index.js"],"names":["TaskContext","createContext","useTasks","useContext","TaskProvider","children","useState","tasks","setTasks","Provider","value","addTask","task","id","v4","complete","setStatusTask","status","map","t","NewTaskForm","setTask","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Task","checked","className","TaskList","i","TodoList","TOKEN_KEY","isLogin","localStorage","getItem","login","setItem","Home","props","handleLogout","removeItem","history","push","setState","state","this","onClick","to","Component","PrivateRoute","component","rest","render","PublicRoute","restricted","Loginform","handleLogin","name","password","answerOk","answerDenied","buttonText","handleSubmit","bind","method","style","fontWeight","handleChange","href","fontSize","textDecoration","color","event","field","axios","url","headers","data","then","response","console","log","answer","alert","withRouter","Loginbox","LoginWindow","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8a97604.chunk.js","sourcesContent":["// 1\r\nimport React, {createContext, useState, useContext} from 'react'\r\nimport { v4 } from \"uuid\"\r\n\r\n// 2\r\nconst TaskContext = createContext()\r\nexport const useTasks = () => useContext(TaskContext)\r\n\r\nexport default function TaskProvider({ children }) {\r\n  // 3\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  // 4\r\n  const addTask = task =>\r\n      setTasks([\r\n          ...tasks,\r\n          {\r\n              id: v4(),\r\n              task,\r\n              complete: false\r\n          }\r\n      ])\r\n\r\n\r\n  // 5\r\n  const setStatusTask = (id, status) => {\r\n      setTasks(tasks.map(t => t.id === id ? {...t, complete: status} : t))\r\n  }\r\n\r\n\r\n  // 6\r\n  return (\r\n      <TaskContext.Provider value={{ tasks, addTask, setStatusTask }}>\r\n          { children }\r\n      </TaskContext.Provider>\r\n  )\r\n}","// 1\r\nimport React, { useState } from 'react'\r\nimport { useTasks } from './TaskProvider'\r\n\r\nexport default function NewTaskForm() {\r\n  // 2\r\n  const [task, setTask] = useState('')\r\n  const { addTask } = useTasks()\r\n\r\n  // 3\r\n  const submit = e => {\r\n    e.preventDefault()\r\n    addTask(task)\r\n    setTask('')\r\n  }\r\n\r\n  return (\r\n    // 4\r\n    <form onSubmit={submit}>\r\n      <input type=\"text\" value={task} placeholder=\"New task...\" onChange={e => setTask(e.target.value)} required />\r\n      <button>Add</button>\r\n    </form>\r\n  )\r\n}","// 1\r\nimport React from 'react';\r\nimport { useTasks } from './TaskProvider';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport './Todo.scss'\r\n\r\nexport default function Task({ id, task, complete }) {\r\n  // 2\r\n  const { setStatusTask } = useTasks()\r\n\r\n  // 3\r\n  const checkTask = e => setStatusTask(id, e.target.checked)\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input type=\"checkbox\"  onChange={checkTask} />\r\n      </td>\r\n      <td>\r\n        <span className={ complete ? 'task-done' : '' }>{ task }</span>\r\n      </td>\r\n      <td>\r\n         <button type=\"button\" className=\"delButton\" ><FaIcons.FaTrash /></button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}","// 1\r\nimport React from 'react'\r\nimport Task from './Task'\r\nimport { useTasks } from './TaskProvider'\r\n\r\nexport default function TaskList() {\r\n  // 2\r\n  const { tasks } = useTasks()\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {\r\n          // 3\r\n          tasks.map((task, i) => \r\n            <Task key={i} {...task} />\r\n          )\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}","// 1\r\nimport React from 'react'\r\nimport './App.css'\r\nimport './todolist/Todo.scss'\r\nimport NewTaskForm from './todolist/NewTaskForm'\r\nimport TaskList from './todolist/TaskList'\r\n\r\nfunction TodoList() {\r\n  // 2\r\n  return (\r\n    <div className=\"container\">\r\n      <br></br>\r\n       <h1 className=\"title\">Todo List</h1>\r\n      <br></br>\r\n      <NewTaskForm />\r\n      <TaskList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList","  \r\nconst TOKEN_KEY = 'jwt';\r\n\r\nexport const login = () => {\r\n    localStorage.setItem(TOKEN_KEY, 'TestLogin');\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport const isLogin = () => {\r\n    if (localStorage.getItem(TOKEN_KEY)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport default login","import '../css/homescreen.css';\r\nimport React, { Component } from 'react';\r\nimport { logout, isLogin } from '../utils';\r\nimport { Link } from 'react-router-dom';\r\nimport TodoList from '../ToDoList'\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLogin: isLogin()\r\n        }\r\n    }\r\n\r\n    handleLogout = () => {\r\n        logout();\r\n        this.props.history.push('/login')\r\n        this.setState({\r\n            isLogin: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n         <div>\r\n                <header className=\"headerBar\">\r\n\r\n                    {this.state.isLogin ? \r\n                    <button  className=\"logoutButton\" onClick={() => this.handleLogout()}>Logout</button>\r\n                    : <Link to=\"/login\" onClick={() => this.handleLogout()}></Link>\r\n                }\r\n                </header>\r\n                <TodoList />\r\n        </div>\r\n   \r\n  \r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from '../utils';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /login page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/login\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from '../utils';\r\n\r\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\r\n    return (\r\n        // restricted = false meaning public route\r\n        // restricted = true meaning restricted route\r\n        <Route {...rest} render={props => (\r\n            isLogin() && restricted ?\r\n                <Redirect to=\"/\" />\r\n            : <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport '../../css/loginbox.css';\r\nimport login from '../../utils';\r\n\r\n\r\nclass Loginform extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            password: \"\",\r\n            status: \"Submit\",\r\n            answerOk: \"Success\",\r\n            answerDenied: \"Denied\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        let buttonText = this.state.status;\r\n        return (\r\n            <div>\r\n               \r\n                <form onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\r\n                    <div className=\"loginContent\">\r\n                    <div className=\"loginTextBox\">\r\n                         <span>\r\n                             <br></br>\r\n                             Hello!\r\n                             <br></br>\r\n                             Nice, to have you back!\r\n                         </span>\r\n                    </div>\r\n                        <span style={{ fontWeight: \"600\"}}>Login</span>\r\n\r\n                        <div className=\"textbox\">\r\n\r\n                    \r\n                            <input\r\n                                type='text'\r\n                                className='form-group'\r\n                                id=\"name\"\r\n                                value={this.state.name}\r\n                                onChange={this.handleChange.bind(this)}\r\n                                required\r\n                                placeholder=' Username'\r\n                            />\r\n                      <br className=\"space\"></br>\r\n                            <input\r\n                                type='password'\r\n                                className='form-group'\r\n                                id=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange.bind(this)}\r\n                                required\r\n                                placeholder=' Password'\r\n                            />\r\n                \r\n                        </div>\r\n                        <a href=\"/home\" style={{fontSize: \"0.8rem\", textDecoration: \"none\", color: \"white\"}}> forgot password?</a>\r\n\r\n                    </div>\r\n   \r\n                    <button className=\"loginButton\">{buttonText}</button>\r\n\r\n                </form>\r\n              \r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    handleChange(event) {\r\n        const field = event.target.id;\r\n        if (field === \"name\") {\r\n            this.setState({ name: event.target.value });\r\n        } else if (field === \"password\") {\r\n            this.setState({ password: event.target.value });\r\n        }\r\n    }\r\n\r\n    handleLogin = () => {\r\n        login();\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ status: \"Submit\" });\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"http://rust.mneubauer.com:8080/login\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: { name: this.state.name, password: this.state.password }\r\n            \r\n        }).then((response, props) => {\r\n            \r\n            console.log(response);\r\n            if (response.data.answer === this.state.answerOk) {\r\n                \r\n                this.setState({ name: \"\", password: \"\", status: \"Logged in\" })\r\n                this.handleLogin()\r\n                alert(\"Login Success\");\r\n\r\n                \r\n           \r\n            } else if (response.data.answer === this.state.answerDenied) {\r\n                this.setState({ password: \"\", status: \"Logging in\" });\r\n                alert(\"Wrong Username or Password\");\r\n            }\r\n        });\r\n    \r\n    }\r\n}\r\n//export default Loginform\r\nexport default withRouter(Loginform);","import React, { Component } from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\n\r\nimport LoginForm from './loginform'\r\n\r\nimport '../../css/loginbox.css';\r\nimport '../../css/colors.css';\r\n\r\n\r\nclass Loginbox extends Component {\r\n\r\n\r\n    render () {\r\n\r\n       \r\n        return(\r\n          <div className=\"loginbox\">\r\n                \r\n                    <Tabs>\r\n                        <TabList>\r\n                        <div>\r\n                            <Tab className=\"loginButton\" type=\"submit\"> Login </Tab>\r\n                            <Tab className=\"registerButton\">Register</Tab>\r\n                        </div>\r\n                        </TabList>\r\n                        \r\n                        <TabPanel>\r\n                            <LoginForm/>\r\n                        </TabPanel>\r\n\r\n                    \r\n                      \r\n           </Tabs>\r\n                \r\n              \r\n\r\n          </div>\r\n          \r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Loginbox","import '../App.css';\r\nimport LoginBox from '../components/Login/loginbox'\r\n\r\nfunction LoginWindow() {\r\n  return (\r\n      <header className=\"App-header\">\r\n\r\n        <LoginBox />\r\n\r\n      </header>\r\n\r\n  );\r\n}\r\n\r\nexport default LoginWindow;\r\n","import './todolist/Todo.scss'\r\nimport './App.css';\r\nimport TodoList from './ToDoList'\r\nimport React, { Component } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport Home from './screens/home'\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport LoginWindow from './screens/Loginwindow';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <PrivateRoute restricted={false} component={Home} path=\"/\" exact />\r\n          <PublicRoute restricted={true} component={LoginWindow} path=\"/login\" exact />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport TaskProvider from './todolist/TaskProvider'\r\n\r\nReactDOM.render(\r\n  <TaskProvider>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </TaskProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}